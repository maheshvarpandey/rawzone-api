# This is a sample build configuration for Docker.
# Check our guides at https://confluence.atlassian.com/x/O1toN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
# image: atlassian/default-image:latest
# enable Docker for your repository
options:
  docker: true

pipelines:
  custom:
    develop:
      - step:
          caches:
            - docker # adds docker layer caching 
          name: Build and push developer branch
          script: # Modify the commands below to build your repository.
            # need to install lsb-release here
            - export IMAGE_NAME=$JFROG_REPO/$BITBUCKET_REPO_SLUG:$BITBUCKET_BUILD_NUMBER
            - docker login -u $DOCKER_USER -p $DOCKER_PASS $JFROG_REPO
            - cd /opt/atlassian/pipelines/agent/build/
            - docker build -t $IMAGE_NAME .
            - docker push $IMAGE_NAME

      - step:
          name: Deploy to DEV
          trigger: manual
          script: # Modify the commands below to build your repository.
            - apt-get update
            - apt-get install -y openssh-server
            - export image_n='"'$JFROG_REPO/$BITBUCKET_REPO_SLUG:$BITBUCKET_BUILD_NUMBER'"'
            - ssh root@207.244.109.61 'export imagename='"'$image_n'"'; echo $imagename; sed -i "/image =/c\ image = ${imagename}" /etc/nomad.d/all-jobs/dev-environment/voucherify-backend.nomad'
            - ssh root@207.244.109.61 "nomad run /etc/nomad.d/all-jobs/dev-environment/voucherify-backend.nomad"

    qa_env:        
      - step:
          caches:
            - docker # adds docker layer caching 
          name: Build and push developer branch
          script: # Modify the commands below to build your repository.
            # need to install lsb-release here
            - export IMAGE_NAME=$JFROG_REPO/$BITBUCKET_REPO_SLUG:$BITBUCKET_BUILD_NUMBER
            - wget --no-check-certificate https://dl.bintray.com/jfrog/jfrog-cli-go/1.8.0/jfrog-cli-linux-amd64/jfrog
            - chmod +x jfrog
            - ./jfrog rt config --url $ARTIFACTORY_URL --user $DOCKER_USER --apikey $DOCKER_PASS
            - docker login -u $DOCKER_USER -p $DOCKER_PASS $JFROG_REPO
            - cd /opt/atlassian/pipelines/agent/build/
           # - rm -f Dockerfile
           # - mv Dockerfile.qa Dockerfile
            - docker build -t $IMAGE_NAME .
            - docker push $IMAGE_NAME

      - step:
          name: Deploy to testing
          deployment: test
          trigger: manual
          script: # Modify the commands below to build your repository.
            - apt-get update
            - apt-get install -y openssh-server
            - export image_n='"'$JFROG_REPO/$BITBUCKET_REPO_SLUG:$BITBUCKET_BUILD_NUMBER'"'
            - ssh root@207.244.109.61 'export imagename='"'$image_n'"'; echo $imagename; sed -i "/image =/c\ image = ${imagename}" /etc/nomad.d/all-jobs/qa-environment/voucherify-backend.nomad'
            - ssh root@207.244.109.61 "nomad stop qavoucherify-backend"
            - ssh root@207.244.109.61 "nomad run /etc/nomad.d/all-jobs/qa-environment/voucherify-backend.nomad"

    staging:        
      - step:
          caches:
            - docker # adds docker layer caching 
          name: Build and push developer branch
          script: # Modify the commands below to build your repository.
            # need to install lsb-release here
            - export IMAGE_NAME=$JFROG_REPO/$BITBUCKET_REPO_SLUG:$BITBUCKET_BUILD_NUMBER
            - wget --no-check-certificate https://dl.bintray.com/jfrog/jfrog-cli-go/1.8.0/jfrog-cli-linux-amd64/jfrog
            - chmod +x jfrog
            - ./jfrog rt config --url $ARTIFACTORY_URL --user $DOCKER_USER --apikey $DOCKER_PASS
            - docker login -u $DOCKER_USER -p $DOCKER_PASS $JFROG_REPO
            - cd /opt/atlassian/pipelines/agent/build/
            - rm -f Dockerfile
            - mv Dockerfile.staging Dockerfile
            - docker build -t $IMAGE_NAME .
            - docker push $IMAGE_NAME

      - step:
          name: Deploy to staging
          trigger: manual
          script: # Modify the commands below to build your repository.
            - apt-get update
            - apt-get install -y openssh-server
            - export image_n='"'$JFROG_REPO/$BITBUCKET_REPO_SLUG:$BITBUCKET_BUILD_NUMBER'"'
            - ssh root@207.244.109.61 'export imagename='"'$image_n'"'; echo $imagename; sed -i "/image =/c\ image = ${imagename}" /etc/nomad.d/all-jobs/staging-environment/frontend.nomad'
            - ssh root@207.244.109.61 "nomad run /etc/nomad.d/all-jobs/staging-environment/frontend.nomad"

    production:        
      - step:
          caches:
            - docker # adds docker layer caching 
          name: Build and push production branch
          script: # Modify the commands below to build your repository.
            # need to install lsb-release here
            - export IMAGE_NAME=$JFROG_REPO/$BITBUCKET_REPO_SLUG:$BITBUCKET_BUILD_NUMBER
            - wget --no-check-certificate https://dl.bintray.com/jfrog/jfrog-cli-go/1.8.0/jfrog-cli-linux-amd64/jfrog
            - chmod +x jfrog
            - ./jfrog rt config --url $ARTIFACTORY_URL --user $DOCKER_USER --apikey $DOCKER_PASS
            - docker login -u $DOCKER_USER -p $DOCKER_PASS $JFROG_REPO
            - cd /opt/atlassian/pipelines/agent/build/
            - rm -f Dockerfile
            - mv Dockerfile.prod Dockerfile
            - docker build -t $IMAGE_NAME .
            - docker push $IMAGE_NAME

      - step:
          name: Deploy to production
          deployment: production
          trigger: manual
          script: # Modify the commands below to build your repository.
            - apt-get update
            - apt-get install -y openssh-server
            - export image_n='"'$JFROG_REPO/$BITBUCKET_REPO_SLUG:$BITBUCKET_BUILD_NUMBER'"'
            - ssh root@207.244.109.61 'export imagename='"'$image_n'"'; echo $imagename; sed -i "/image =/c\ image = ${imagename}" /etc/nomad.d/all-jobs/prod-environment/frontend.nomad'
            - ssh root@207.244.109.61 "nomad run /etc/nomad.d/all-jobs/prod-environment/frontend.nomad"